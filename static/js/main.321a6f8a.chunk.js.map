{"version":3,"sources":["store/movies/types/index.ts","store/movies/types/actionTypes.ts","serviceWorker.ts","store/movies/actions.ts","utils/api.ts","store/movies/sagas.ts","store/movies/reducer.ts","store/index.ts","components/layout/Header.tsx","components/layout/MainContent.tsx","components/shared/SearchField.tsx","components/movies/SearchMoviesField.ts","components/shared/ErrorMessageWrapper.ts","components/shared/List.tsx","components/movies/Movie.tsx","components/movies/MovieCard.tsx","components/movies/MoviesList.tsx","components/movies/SearchMoviesResult.tsx","components/shared/Loader.tsx","components/movies/MoviesPage.tsx","components/App.tsx","styles/normalize.ts","styles/global.ts","styles/index.tsx","main.tsx","index.tsx","configureStore.ts"],"names":["MoviesActionTypes","Boolean","window","location","hostname","match","searchError","message","action","SEARCH_ERROR","API_ENDPOINT","process","REACT_APP_API_ENDPOINT","prepareUrl","baseUrl","params","join","callApi","method","url","data","a","fetch","headers","Accept","body","JSON","stringify","res","json","makeGetRequest","handleSearch","watchFetchRequest","moviesSaga","call","payload","Error","put","Search","length","SEARCH_SUCCESS","stack","takeEvery","SEARCH_REQUEST","all","fork","initialState","undefined","error","loading","reducer","state","type","rootSaga","Wrapper","styled","header","HeaderInner","div","HeaderLeft","Title","h2","Header","appName","main","Form","form","Button","button","Input","input","mapDispatchToProps","searchRequest","searchText","searchMoviesRequest","SearchMoviesField","connect","className","placeholder","useState","setSearchText","isInputValid","onSubmit","e","preventDefault","value","onChange","target","disabled","ErrorMessageWrapper","ContentWrapper","ul","List","itemComponent","map","x","key","id","React","createElement","item","Poster","imageSrc","Movie","movie","Year","MovieCard","movies","imdbID","errorMessage","wiggle","keyframes","Loader","FullHeightMainContent","children","SearchMoviesFieldWithMargin","FullHeightSearchMoviesResult","SearchMoviesResult","LoaderWrapper","moviesAreLoading","loader","App","Normalize","createGlobalStyle","normalize","GlobalStyle","Main","store","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","moviesReducer","applyMiddleware","run","configureStore","INITIAL_REDUX_STATE","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.321a6f8a.chunk.js","sourcesContent":["export * from './actionTypes'\nexport * from './state'\nexport * from './models/movie'\nexport * from './models/searchMoviesResult'\n","export enum MoviesActionTypes {\n  SEARCH_REQUEST = '@@movies/SEARCH_REQUEST',\n  SEARCH_SUCCESS = '@@movies/SEARCH_SUCCESS',\n  SEARCH_ERROR = '@@movies/SEARCH_ERROR'\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// Skip the whole file because it was autogenerated by create-react-app\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { action } from 'typesafe-actions'\nimport { Movie, MoviesActionTypes } from './types'\n\nexport const searchRequest = (searchText: string) =>\n  action(MoviesActionTypes.SEARCH_REQUEST, searchText)\nexport const searchSuccess = (data: Movie[]) =>\n  action(MoviesActionTypes.SEARCH_SUCCESS, data)\nexport const searchError = (message: string) =>\n  action(MoviesActionTypes.SEARCH_ERROR, message)\n","const API_ENDPOINT =\n  process.env.REACT_APP_API_ENDPOINT || 'http://www.omdbapi.com/'\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nfunction prepareUrl(baseUrl: string, ...params: string[]): string {\n  return `${baseUrl}?${params.join('&')}`\n}\n\nasync function callApi<T>(\n  method: string,\n  url: string,\n  data?: object | string | number | boolean\n): Promise<T> {\n  const res = await fetch(url, {\n    method,\n    headers: {\n      Accept: 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n\n  return res.json()\n}\n\nexport function makeGetRequest<T>(...params: string[]): Promise<T> {\n  const url = prepareUrl(API_ENDPOINT, `apiKey=${API_KEY}`, ...params)\n\n  return callApi('get', url)\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { searchError, searchSuccess } from './actions'\nimport { makeGetRequest } from '../../utils/api'\nimport { MoviesActionTypes, SearchMoviesResult } from './types'\nimport { AppAction } from '../../utils/appAction'\n\nfunction* handleSearch(action: AppAction) {\n  try {\n    const res: SearchMoviesResult = yield call(\n      makeGetRequest,\n      `s=${action.payload}`\n    )\n\n    if (res.Error) {\n      yield put(searchError(res.Error))\n    } else if (res.Search.length === 0) {\n      yield put(\n        searchError('There are no movies found. Try another search request.')\n      )\n    } else {\n      yield put(searchSuccess(res.Search))\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(searchError(err.stack))\n    } else {\n      yield put(searchError('An unknown error occurred'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(MoviesActionTypes.SEARCH_REQUEST, handleSearch)\n}\n\nfunction* moviesSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default moviesSaga\n","import { Reducer } from 'redux'\nimport { MoviesState, MoviesActionTypes } from './types'\n\nexport const initialState: MoviesState = {\n  data: undefined,\n  error: undefined,\n  loading: false\n}\n\nconst reducer: Reducer<MoviesState> = (state = initialState, action) => {\n  switch (action.type) {\n    case MoviesActionTypes.SEARCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case MoviesActionTypes.SEARCH_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        data: action.payload,\n        error: undefined\n      }\n    }\n    case MoviesActionTypes.SEARCH_ERROR: {\n      return { ...state, loading: false, error: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as moviesReducer }\n","import { combineReducers } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\n\nimport moviesSaga from './movies/sagas'\nimport { MoviesState } from './movies/types/state'\nimport { moviesReducer } from './movies/reducer'\n\nexport interface ApplicationState {\n  movies: MoviesState\n}\n\nexport const createRootReducer = () =>\n  combineReducers({\n    movies: moviesReducer\n  })\n\nexport function* rootSaga() {\n  yield all([fork(moviesSaga)])\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {\n  appName: string\n}\n\nconst Wrapper = styled.header`\n  padding: 0.5rem 1.5rem;\n  background-color: deepskyblue;\n  color: whitesmoke;\n`\n\nconst HeaderInner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst HeaderLeft = styled.div`\n  padding-right: 1rem;\n`\n\nconst Title = styled.h2`\n  margin: 0;\n  font-weight: 500;\n`\n\nexport default function Header({ appName }: Props) {\n  return (\n    <Wrapper>\n      <HeaderInner>\n        <HeaderLeft>\n          <Title>{appName}</Title>\n        </HeaderLeft>\n      </HeaderInner>\n    </Wrapper>\n  )\n}\n","import React, { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\ninterface Props {\n  className?: string\n}\n\nexport default function MainContent({\n  className,\n  children\n}: PropsWithChildren<Props>) {\n  return <Wrapper className={className}>{children}</Wrapper>\n}\n","import React, { FormEvent, useState } from 'react'\nimport styled from 'styled-components'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  searchRequest: (searchText: string) => void\n}\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n`\n\nconst Button = styled.button`\n  border: 2px solid deepskyblue;\n  font-size: 20px;\n  padding: 0.3em 0.5em;\n  margin-left: 0.3em;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    background-color: deepskyblue;\n    color: whitesmoke;\n  }\n`\n\nconst Input = styled.input`\n  border: 2px solid deepskyblue;\n  width: 400px;\n  max-width: 50%;\n  font-size: 20px;\n  padding: 0 0.3em;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport default function SearchField({\n  className,\n  searchRequest,\n  placeholder\n}: Props) {\n  const [searchText, setSearchText] = useState('')\n\n  const isInputValid = () => {\n    return searchText.length > 0\n  }\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n\n    if (!isInputValid()) {\n      return\n    }\n\n    searchRequest(searchText)\n  }\n\n  return (\n    <Form className={className} onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        placeholder={placeholder}\n        value={searchText}\n        onChange={e => setSearchText(e.target.value)}\n      />\n      <Button disabled={!isInputValid()}>Search</Button>\n    </Form>\n  )\n}\n","import { connect } from 'react-redux'\nimport SearchField from '../shared/SearchField'\nimport { searchRequest as searchMoviesRequest } from '../../store/movies/actions'\n\nexport const mapDispatchToProps = {\n  searchRequest: (searchText: string) => searchMoviesRequest(searchText)\n}\n\nconst SearchMoviesField = connect(undefined, mapDispatchToProps)(SearchField)\n\nexport default SearchMoviesField\n","import styled from 'styled-components'\n\nconst ErrorMessageWrapper = styled.div`\n  font-size: 50px;\n  padding: 0.3em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport default ErrorMessageWrapper\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props<T, I> {\n  className?: string\n  itemComponent: React.FunctionComponent<{ item: T }>\n  data: I[]\n}\n\nconst ContentWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-column-gap: 1em;\n  grid-row-gap: 1em;\n  margin: 0;\n  padding: 0.1em;\n  list-style: none;\n`\n\nexport default function List<T, I extends T & { id: string }>({\n  className,\n  itemComponent,\n  data\n}: Props<T, I>) {\n  return (\n    <ContentWrapper className={className}>\n      {data.map(x => (\n        <li key={x.id}>{React.createElement(itemComponent, { item: x })}</li>\n      ))}\n    </ContentWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Movie as MovieModel } from '../../store/movies/types'\n\nconst Wrapper = styled.div`\n  height: 100%;\n`\n\nconst Poster = styled.div<{ imageSrc: string }>`\n  position: relative;\n  margin: 0;\n  border-radius: 4px;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: darkslategrey url(${({ imageSrc }) => imageSrc}) no-repeat center\n    top;\n  background-size: cover;\n`\n\nconst Title = styled.div`\n  position: absolute;\n  text-align: center;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 0.7em 0;\n  bottom: 0;\n  color: whitesmoke;\n`\n\ninterface Props {\n  movie: MovieModel\n}\n\nexport default function Movie({ movie }: Props) {\n  return (\n    <Wrapper>\n      <Poster imageSrc={movie.Poster}>\n        <Title>\n          {movie.Title}, {movie.Year}\n        </Title>\n      </Poster>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { Movie as MovieModel } from '../../store/movies/types'\nimport Movie from './Movie'\n\ninterface Props {\n  item: MovieModel\n}\n\nexport default function MovieCard({ item }: Props) {\n  return <Movie movie={item} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport List from '../shared/List'\nimport { Movie as MovieModel } from '../../store/movies/types'\nimport MovieCard from './MovieCard'\n\ntype MovieModelWithId = MovieModel & { id: string }\n\ninterface Props {\n  className?: string\n  movies: MovieModelWithId[]\n}\n\nfunction MoviesList({ className, movies }: Props) {\n  return <List className={className} itemComponent={MovieCard} data={movies} />\n}\n\nexport default styled(MoviesList)`\n  grid-auto-rows: 250px;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Movie as MovieModel } from '../../store/movies/types'\nimport { ApplicationState } from '../../store'\nimport ErrorMessageWrapper from '../shared/ErrorMessageWrapper'\nimport MoviesList from './MoviesList'\n\ntype MovieModelWithId = MovieModel & { id: string }\n\ninterface Props {\n  className?: string\n  movies: MovieModelWithId[] | undefined\n  errorMessage?: string\n}\n\nfunction SearchMoviesResult<T>({ className, movies, errorMessage }: Props) {\n  if (errorMessage) {\n    return (\n      <ErrorMessageWrapper className={className}>\n        {errorMessage}\n      </ErrorMessageWrapper>\n    )\n  }\n\n  if (movies) {\n    return <MoviesList className={className} movies={movies} />\n  }\n\n  return null\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  movies: state.movies.data?.map(x => ({ id: x.imdbID, ...x })),\n  errorMessage: state.movies.error\n})\n\nexport default connect(mapStateToProps)(SearchMoviesResult)\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst wiggle = keyframes`\n  0% {\n    top: 8px;\n    height: 64px;\n  }\n\n  50%, 100% {\n    top: 24px;\n    height: 32px;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n\n  & > div {\n    display: inline-block;\n    position: absolute;\n    left: 8px;\n    width: 16px;\n    background: deepskyblue;\n    animation: ${wiggle} 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\n  }\n\n  & > div:nth-child(1) {\n    left: 8px;\n    animation-delay: -0.24s;\n  }\n\n  & > div:nth-child(2) {\n    left: 32px;\n    animation-delay: -0.12s;\n  }\n\n  & > div:nth-child(3) {\n    left: 56px;\n    animation-delay: 0s;\n  }\n`\n\nexport default function Loader() {\n  return (\n    <Wrapper>\n      <div />\n      <div />\n      <div />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport MainContent from '../layout/MainContent'\nimport SearchMoviesField from './SearchMoviesField'\nimport SearchMoviesResult from './SearchMoviesResult'\nimport { ApplicationState } from '../../store'\nimport Loader from '../shared/Loader'\n\nconst FullHeightMainContent = styled(MainContent)`\n  flex: 1;\n`\n\nconst SearchMoviesFieldWithMargin = styled(SearchMoviesField)`\n  margin: 1em;\n  padding: 0.5em 0;\n  flex: 0 0 auto;\n`\n\nconst FullHeightSearchMoviesResult = styled(SearchMoviesResult)`\n  margin: 0 2% 2%;\n  flex: 1;\n`\n\nconst LoaderWrapper = styled.div`\n  flex: 1;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\ninterface Props {\n  moviesAreLoading: boolean\n}\n\nfunction MoviesPage({ moviesAreLoading }: Props) {\n  const loader = (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  )\n\n  return (\n    <FullHeightMainContent>\n      <SearchMoviesFieldWithMargin placeholder=\"Enter Movies or Series name\" />\n      {moviesAreLoading ? loader : <FullHeightSearchMoviesResult />}\n    </FullHeightMainContent>\n  )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  moviesAreLoading: state.movies.loading\n})\n\nexport default connect(mapStateToProps)(MoviesPage)\n","import React from 'react'\nimport styled from 'styled-components'\nimport Header from './layout/Header'\nimport MoviesPage from './movies/MoviesPage'\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  overflow-x: hidden;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Header appName=\"Search Movies (with react hooks)\" />\n      <MoviesPage />\n    </Wrapper>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { normalize } from 'styled-normalize'\n\nexport const Normalize = createGlobalStyle`\n  ${normalize}\n \n  html {\n    box-sizing: border-box;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  html {\n    height: 100%;\n  }\n\n  body {\n    width: 100%;\n    overflow: hidden;\n    font-family: 'Roboto', sans-serif;\n    background-color: black;\n    color: white;\n  }\n`\n","import * as React from 'react'\nimport { Normalize } from './normalize'\nimport CustomGlobalStyle from './global'\n\nexport default function GlobalStyle() {\n  return (\n    <>\n      <Normalize />\n      <CustomGlobalStyle />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { Store } from 'redux'\nimport { ApplicationState } from './store'\nimport App from './components/App'\nimport GlobalStyle from './styles'\n\ninterface MainProps {\n  store: Store<ApplicationState>\n}\n\nfunction Main({ store }: MainProps) {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './configureStore'\nimport Main from './main'\nimport { ApplicationState } from './store'\n\nconst initialState = (window as { INITIAL_REDUX_STATE?: ApplicationState })\n  .INITIAL_REDUX_STATE\nconst store = configureStore(initialState)\n\nReactDOM.render(<Main store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { Store, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { ApplicationState, createRootReducer, rootSaga } from './store'\n\nexport default function configureStore(\n  initialState?: ApplicationState\n): Store<ApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  return store\n}\n"],"sourceRoot":""}